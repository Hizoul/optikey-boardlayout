// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app: 1 hovering over 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1104"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: after switching two invalid keys 1`] = `
Array [
  Object {
    "Col": 5,
    "Row": 5,
  },
  Object {
    "Col": 4,
    "Row": 3,
  },
]
`;

exports[`app: back to nothing 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-919"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: dragging 1 but left 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-734"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: dragging 1 over 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-549"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: drop 1 on 2 and hence switch them 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-1289"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: nothing yet 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-179"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-179"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-179"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: started dragging 1 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        w
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        e
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        r
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        t
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        u
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        i
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        o
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        p
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        a
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        s
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        d
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        f
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        g
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        h
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        j
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        k
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        l
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        x
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        c
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        v
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        b
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        n
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        m
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40%</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100%</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <KeyGroup Name=\\"Keygroup #1\\"/>
  <Content>
    <DynamicKey Row=\\"0\\" Col=\\"0\\">
      <Label>~</Label>
      <Text>~</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"1\\">
      <Label>1</Label>
      <Text>1</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"2\\">
      <Label>2</Label>
      <Text>2</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"3\\">
      <Label>3</Label>
      <Text>3</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"4\\">
      <Label>4</Label>
      <Text>4</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"5\\">
      <Label>5</Label>
      <Text>5</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"6\\">
      <Label>6</Label>
      <Text>6</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"7\\">
      <Label>7</Label>
      <Text>7</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"8\\">
      <Label>8</Label>
      <Text>8</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"9\\">
      <Label>9</Label>
      <Text>9</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"10\\">
      <Label>0</Label>
      <Text>0</Text>
    </DynamicKey>
    <DynamicKey Row=\\"0\\" Col=\\"11\\">
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"0\\">
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"1\\">
      <Label>!</Label>
      <Text>!</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"2\\">
      <Label>?</Label>
      <Text>?</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"3\\">
      <Label>+</Label>
      <Text>+</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"4\\">
      <Label>*</Label>
      <Text>*</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"5\\">
      <Label>%</Label>
      <Text>%</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"6\\">
      <Label>&amp;</Label>
      <Text>&amp;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"7\\">
      <Label>\\"</Label>
      <Text>\\"</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"8\\">
      <Label>'</Label>
      <Text>'</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"9\\">
      <Label>\`</Label>
      <Text>\`</Text>
    </DynamicKey>
    <DynamicKey Row=\\"1\\" Col=\\"10\\">
      <Label>$</Label>
      <Text>$</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"0\\">
      <Label>/</Label>
      <Text>/</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"1\\">
      <ShiftDownLabel>Q</ShiftDownLabel>
      <Label>q</Label>
      <Text>q</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"2\\">
      <ShiftDownLabel>W</ShiftDownLabel>
      <Label>w</Label>
      <Text>w</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"3\\">
      <ShiftDownLabel>E</ShiftDownLabel>
      <Label>e</Label>
      <Text>e</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"4\\">
      <ShiftDownLabel>R</ShiftDownLabel>
      <Label>r</Label>
      <Text>r</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"5\\">
      <ShiftDownLabel>T</ShiftDownLabel>
      <Label>t</Label>
      <Text>t</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"6\\">
      <ShiftDownLabel>Z</ShiftDownLabel>
      <Label>z</Label>
      <Text>z</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"7\\">
      <ShiftDownLabel>U</ShiftDownLabel>
      <Label>u</Label>
      <Text>u</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"8\\">
      <ShiftDownLabel>I</ShiftDownLabel>
      <Label>i</Label>
      <Text>i</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"9\\">
      <ShiftDownLabel>O</ShiftDownLabel>
      <Label>o</Label>
      <Text>o</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"10\\">
      <ShiftDownLabel>P</ShiftDownLabel>
      <Label>p</Label>
      <Text>p</Text>
    </DynamicKey>
    <DynamicKey Row=\\"2\\" Col=\\"11\\">
      <Label>|</Label>
      <Text>|</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"0\\">
      <Label>-</Label>
      <Text>-</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"1\\">
      <Label>_</Label>
      <Text>_</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"2\\">
      <ShiftDownLabel>A</ShiftDownLabel>
      <Label>a</Label>
      <Text>a</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"3\\">
      <ShiftDownLabel>S</ShiftDownLabel>
      <Label>s</Label>
      <Text>s</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"4\\">
      <ShiftDownLabel>D</ShiftDownLabel>
      <Label>d</Label>
      <Text>d</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"5\\">
      <ShiftDownLabel>F</ShiftDownLabel>
      <Label>f</Label>
      <Text>f</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"6\\">
      <ShiftDownLabel>G</ShiftDownLabel>
      <Label>g</Label>
      <Text>g</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"7\\">
      <ShiftDownLabel>H</ShiftDownLabel>
      <Label>h</Label>
      <Text>h</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"8\\">
      <ShiftDownLabel>J</ShiftDownLabel>
      <Label>j</Label>
      <Text>j</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"9\\">
      <ShiftDownLabel>K</ShiftDownLabel>
      <Label>k</Label>
      <Text>k</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"10\\">
      <ShiftDownLabel>L</ShiftDownLabel>
      <Label>l</Label>
      <Text>l</Text>
    </DynamicKey>
    <DynamicKey Row=\\"3\\" Col=\\"11\\">
      <Label>^</Label>
      <Text>^</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"0\\">
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"1\\">
      <Label>&lt;</Label>
      <Text>&lt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"2\\">
      <ShiftDownLabel>Y</ShiftDownLabel>
      <Label>y</Label>
      <Text>y</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"3\\">
      <ShiftDownLabel>X</ShiftDownLabel>
      <Label>x</Label>
      <Text>x</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"4\\">
      <ShiftDownLabel>C</ShiftDownLabel>
      <Label>c</Label>
      <Text>c</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"5\\">
      <ShiftDownLabel>V</ShiftDownLabel>
      <Label>v</Label>
      <Text>v</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"6\\">
      <ShiftDownLabel>B</ShiftDownLabel>
      <Label>b</Label>
      <Text>b</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"7\\">
      <ShiftDownLabel>N</ShiftDownLabel>
      <Label>n</Label>
      <Text>n</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"8\\">
      <ShiftDownLabel>M</ShiftDownLabel>
      <Label>m</Label>
      <Text>m</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"9\\">
      <Label>@</Label>
      <Text>@</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"10\\">
      <Label>=</Label>
      <Text>=</Text>
    </DynamicKey>
    <DynamicKey Row=\\"4\\" Col=\\"11\\">
      <Label>#</Label>
      <Text>#</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"0\\">
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"1\\">
      <Label>&gt;</Label>
      <Text>&gt;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"2\\">
      <Label>,</Label>
      <Text>,</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"3\\">
      <Label>.</Label>
      <Text>.</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"4\\">
      <Label>(</Label>
      <Text>(</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"5\\">
      <Label>)</Label>
      <Text>)</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"6\\">
      <Label>[</Label>
      <Text>[</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"7\\">
      <Label>]</Label>
      <Text>]</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"8\\">
      <Label>{</Label>
      <Text>{</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"9\\">
      <Label>}</Label>
      <Text>}</Text>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"10\\">
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </DynamicKey>
    <DynamicKey Row=\\"5\\" Col=\\"11\\">
      <Label>Esc</Label>
      <Action>Escape</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"0\\">
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"1\\">
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"2\\">
      <Label>;</Label>
      <Text>;</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"3\\">
      <Label>:</Label>
      <Text>:</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"4\\">
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"5\\" Width=\\"2\\" Height=\\"2\\">
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"7\\">
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
      <Text>undefined</Text>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"8\\">
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"9\\">
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"10\\">
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </DynamicKey>
    <DynamicKey Row=\\"6\\" Col=\\"11\\">
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Grid. Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Height"
                      onChange={[Function]}
                      type="text"
                      value="40%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Width"
                      onChange={[Function]}
                      type="text"
                      value="100%"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Thickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Symbol Margin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-364"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Persist New State
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Window State
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                       Dock Size
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Horizontal Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Vertical Offset"
                      onChange={[Function]}
                      type="text"
                      value="0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Background Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label=" Border Color"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-364"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                         Hide From Keyboard Menu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Keygroups
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flex1 vertical"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      Add
                      <span
                        className="MuiButton-endIcon MuiButton-iconSizeMedium"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                          />
                        </svg>
                      </span>
                    </span>
                  </button>
                  <div
                    className="flex flex1 center"
                  >
                    <div
                      className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel negateMarginBot"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <div
                          className="MuiExpansionPanelSummary-content"
                        >
                          <p
                            className="MuiTypography-root MuiTypography-body1"
                          >
                            Keygroup #1
                          </p>
                        </div>
                        <div
                          aria-disabled={false}
                          aria-hidden={true}
                          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                          onBlur={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role={null}
                          tabIndex={null}
                        >
                          <span
                            className="MuiIconButton-label"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                              />
                            </svg>
                          </span>
                        </div>
                      </div>
                      <div
                        className="MuiCollapse-container MuiCollapse-hidden"
                        style={
                          Object {
                            "minHeight": "0px",
                          }
                        }
                      >
                        <div
                          className="MuiCollapse-wrapper"
                        >
                          <div
                            className="MuiCollapse-wrapperInner"
                          >
                            <div
                              role="region"
                            >
                              <div
                                className="MuiExpansionPanelDetails-root simplePanel"
                              >
                                <div
                                  className="flex1 vertical"
                                >
                                  <div
                                    className="flex1 vertical"
                                  >
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        The name of the keygroup
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Background Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Foreground Color"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Disabled Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Background"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Foreground"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Key Down Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Opacity"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Width
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Auto Scale To One Key Height
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Shared Size Group
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      >
                                        only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                      </p>
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Persian Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Unicode Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="flex horizontal inputMargin"
                                    >
                                      <label
                                        className="MuiFormControlLabel-root"
                                      >
                                        <span
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <input
                                              className="PrivateSwitchBase-input-364"
                                              data-indeterminate={false}
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                           Use Urdu Compatibility Font
                                        </span>
                                      </label>
                                      <p
                                        className="MuiFormHelperText-root center"
                                      />
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Lock On Time"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from when gaze is detected on key to the start of the progress animation
                                      </p>
                                    </div>
                                    <div
                                      className="MuiFormControl-root inputMargin"
                                    >
                                      <input
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "max": undefined,
                                            "min": undefined,
                                            "step": undefined,
                                          }
                                        }
                                        label=" Completion Times"
                                        onChange={[Function]}
                                        type="number"
                                        value=""
                                      />
                                      <p
                                        className="MuiFormHelperText-root"
                                      >
                                        milliseconds from the start of the progress animation to the key being triggered
                                      </p>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <button
                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorSecondary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "marginTop": "1rem",
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                          />
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Refer to the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: transfer data on dragover 1`] = `
Object {
  "dropEffect": "move",
  "getData": [Function],
  "setData": [Function],
}
`;

exports[`app: transfer data on dragstart 1`] = `
Object {
  "dropEffect": "copy",
  "getData": [Function],
  "setData": [Function],
}
`;

exports[`app: transfer data on drop 1`] = `
Object {
  "dropEffect": "move",
  "getData": [Function],
  "setData": [Function],
}
`;
