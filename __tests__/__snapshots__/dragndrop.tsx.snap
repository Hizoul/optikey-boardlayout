// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app: 1 hovering over 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-909 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-912"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-909 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-912"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: after switching two invalid keys 1`] = `
Array [
  Object {
    "Col": 5,
    "Row": 5,
  },
  Object {
    "Col": 4,
    "Row": 3,
  },
]
`;

exports[`app: back to nothing 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-756 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-759"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-756 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-759"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: dragging 1 but left 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-603 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-606"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-603 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-606"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: dragging 1 over 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-450 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-453"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-450 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-453"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: drop 1 on 2 and hence switch them 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center  isHovered  "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1062 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-1065"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1062 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-1065"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: nothing yet 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-144 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-147"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-144 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-147"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: started dragging 1 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center   isDragged "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Keys>
    <TextKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </TextKey>
    <TextKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </TextKey>
    <TextKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </TextKey>
    <TextKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </TextKey>
    <TextKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </TextKey>
    <TextKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </TextKey>
    <TextKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </TextKey>
    <ActionKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
    </ActionKey>
    <ActionKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
    </ActionKey>
    <ActionKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
    </ActionKey>
  </Keys>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="center"
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                    }
                  }
                >
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Name"
                    onChange={[Function]}
                    type="text"
                    value="OptiKey-BoardMaker"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Rows"
                    onChange={[Function]}
                    type="number"
                    value={7}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Grid.Cols"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Height"
                    onChange={[Function]}
                    type="number"
                    value={40}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Width"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderThickness"
                    onChange={[Function]}
                    type="text"
                    value="0,0,0,0"
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="SymbolMargin"
                    onChange={[Function]}
                    type="number"
                    value={1}
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="Position"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-297 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-300"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      PersistNewState
                    </span>
                  </label>
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="WindowState"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="DockSize"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="HorizontalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="VerticalOffset"
                    onChange={[Function]}
                    type="number"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BackgroundColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <input
                    fullWidth={true}
                    inputProps={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "step": undefined,
                      }
                    }
                    label="BorderColor"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <label
                    className="MuiFormControlLabel-root"
                  >
                    <span
                      aria-disabled={false}
                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-297 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                      onBlur={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={null}
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <input
                          className="PrivateSwitchBase-input-300"
                          data-indeterminate={false}
                          onChange={[Function]}
                          type="checkbox"
                        />
                        <svg
                          aria-hidden="true"
                          className="MuiSvgIcon-root"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                      </span>
                    </span>
                    <span
                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                    >
                      HideFromKeyboardMenu
                    </span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: transfer data on dragover 1`] = `
Object {
  "dropEffect": "move",
  "getData": [Function],
  "setData": [Function],
}
`;

exports[`app: transfer data on dragstart 1`] = `
Object {
  "dropEffect": "copy",
  "getData": [Function],
  "setData": [Function],
}
`;

exports[`app: transfer data on drop 1`] = `
Object {
  "dropEffect": "move",
  "getData": [Function],
  "setData": [Function],
}
`;
