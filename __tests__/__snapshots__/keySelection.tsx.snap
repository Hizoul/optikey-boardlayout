// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app: case sensitive example 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
      <Symbol>Menu</Symbol>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1844"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1844"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1844"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1844"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="6"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-1842 Mui-checked MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={true}
                            className="PrivateSwitchBase-input-1844"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={true}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="ShiftUpLabel"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="ShiftDownLabel"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1841 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1844"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 1 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="."
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-549"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value="."
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-546 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-549"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 1 force only text 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="."
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-919"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value="."
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-916 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-919"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 1 force shiftup + down text 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="."
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-732 Mui-checked MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={true}
                            className="PrivateSwitchBase-input-734"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={true}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="ShiftUpLabel"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="ShiftDownLabel"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-731 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-734"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 2 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="6"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1104"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value="6"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1101 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1104"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 2 and set to action key 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1474"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1474"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-1472 Mui-checked MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={true}
                            className="PrivateSwitchBase-input-1474"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={true}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Symbol
                    </label>
                    <select>
                      <option>
                        1of2Icon
                      </option>
                      <option>
                        1of3Icon
                      </option>
                      <option>
                        2of2Icon
                      </option>
                      <option>
                        2of3Icon
                      </option>
                      <option>
                        3of3Icon
                      </option>
                      <option>
                        DiacriticsIcon
                      </option>
                      <option>
                        AddToDictionaryIcon
                      </option>
                      <option>
                        AlarmIcon
                      </option>
                      <option>
                        AlphaIcon
                      </option>
                      <option>
                        ApplicationIcon
                      </option>
                      <option>
                        ArrowPointingToBottomIcon
                      </option>
                      <option>
                        ArrowPointingToBottomBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToBottomLeftIcon
                      </option>
                      <option>
                        ArrowPointingToBottomLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToBottomRightIcon
                      </option>
                      <option>
                        ArrowPointingToBottomRightBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToLeftIcon
                      </option>
                      <option>
                        ArrowPointingToLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToRightIcon
                      </option>
                      <option>
                        ArrowPointingToRightBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopIcon
                      </option>
                      <option>
                        ArrowPointingToTopBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopLeftIcon
                      </option>
                      <option>
                        ArrowPointingToTopLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopRightIcon
                      </option>
                      <option>
                        ArrowPointingToTopRightBoundaryIcon
                      </option>
                      <option>
                        BackIcon
                      </option>
                      <option>
                        BackManyIcon
                      </option>
                      <option>
                        BackOneIcon
                      </option>
                      <option>
                        BrowserIcon
                      </option>
                      <option>
                        BrowserBackIcon
                      </option>
                      <option>
                        BrowserForwardIcon
                      </option>
                      <option>
                        BrowserHomeIcon
                      </option>
                      <option>
                        BrowserSearchIcon
                      </option>
                      <option>
                        CalibrateIcon
                      </option>
                      <option>
                        ClearIcon
                      </option>
                      <option>
                        CollapseDockIcon
                      </option>
                      <option>
                        CommuniKateIcon
                      </option>
                      <option>
                        ConversationIcon
                      </option>
                      <option>
                        CurrenciesIcon
                      </option>
                      <option>
                        CopyAllIcon
                      </option>
                      <option>
                        CursorIcon
                      </option>
                      <option>
                        DecreaseOpacityIcon
                      </option>
                      <option>
                        DownArrowKeyIcon
                      </option>
                      <option>
                        EndIcon
                      </option>
                      <option>
                        EnterIcon
                      </option>
                      <option>
                        ExpandDockIcon
                      </option>
                      <option>
                        FloatIcon
                      </option>
                      <option>
                        HomeIcon
                      </option>
                      <option>
                        IncreaseOpacityIcon
                      </option>
                      <option>
                        KeyboardIcon
                      </option>
                      <option>
                        LanguageIcon
                      </option>
                      <option>
                        MenuIcon
                      </option>
                      <option>
                        MinimiseIcon
                      </option>
                      <option>
                        MoreIcon
                      </option>
                      <option>
                        MouseIcon
                      </option>
                      <option>
                        MouseDragIcon
                      </option>
                      <option>
                        MouseLeftClickIcon
                      </option>
                      <option>
                        MouseLeftDoubleClickIcon
                      </option>
                      <option>
                        MouseLeftDownUpIcon
                      </option>
                      <option>
                        MouseMagneticCursorIcon
                      </option>
                      <option>
                        MouseMagnifierIcon
                      </option>
                      <option>
                        MouseMiddleClickIcon
                      </option>
                      <option>
                        MouseMiddleDownUpIcon
                      </option>
                      <option>
                        MouseMoveToIcon
                      </option>
                      <option>
                        MouseRightClickIcon
                      </option>
                      <option>
                        MouseRightDownUpIcon
                      </option>
                      <option>
                        MouseScrollToBottomIcon
                      </option>
                      <option>
                        MouseScrollToLeftIcon
                      </option>
                      <option>
                        MouseScrollToRightIcon
                      </option>
                      <option>
                        MouseScrollToTopIcon
                      </option>
                      <option>
                        MultiKeySelectionIcon
                      </option>
                      <option>
                        NoIcon
                      </option>
                      <option>
                        NumericAndSymbolsIcon
                      </option>
                      <option>
                        LeftArrowKeyIcon
                      </option>
                      <option>
                        LockBarIcon
                      </option>
                      <option>
                        LookToScrollActiveIcon
                      </option>
                      <option>
                        LookToScrollBoundsScreenPointIcon
                      </option>
                      <option>
                        LookToScrollBoundsScreenCentredIcon
                      </option>
                      <option>
                        LookToScrollBoundsWindowIcon
                      </option>
                      <option>
                        LookToScrollBoundsSubwindowIcon
                      </option>
                      <option>
                        LookToScrollBoundsCustomIcon
                      </option>
                      <option>
                        LookToScrollModeVerticalIcon
                      </option>
                      <option>
                        LookToScrollModeHorizontalIcon
                      </option>
                      <option>
                        LookToScrollModeCrossIcon
                      </option>
                      <option>
                        LookToScrollModeFreeIcon
                      </option>
                      <option>
                        LookToScrollSpeedSlowIcon
                      </option>
                      <option>
                        LookToScrollSpeedMediumIcon
                      </option>
                      <option>
                        LookToScrollSpeedFastIcon
                      </option>
                      <option>
                        PadlockIcon
                      </option>
                      <option>
                        PhysicalKeysIcon
                      </option>
                      <option>
                        QuitIcon
                      </option>
                      <option>
                        ReplayLastMouseActionIcon
                      </option>
                      <option>
                        RestartIcon
                      </option>
                      <option>
                        RightArrowKeyIcon
                      </option>
                      <option>
                        ShiftIcon
                      </option>
                      <option>
                        SizeAndPositionIcon
                      </option>
                      <option>
                        SpaceIcon
                      </option>
                      <option>
                        SpeakIcon
                      </option>
                      <option>
                        SleepIcon
                      </option>
                      <option>
                        SuggestionLeftIcon
                      </option>
                      <option>
                        SuggestionRightIcon
                      </option>
                      <option>
                        TabIcon
                      </option>
                      <option>
                        UpArrowKeyIcon
                      </option>
                      <option>
                        WinIcon
                      </option>
                      <option>
                        YesIcon
                      </option>
                      <option>
                        YesNoIcon
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Action
                    </label>
                    <select>
                      <option>
                        AddToDictionary
                      </option>
                      <option>
                        Alpha1Keyboard
                      </option>
                      <option>
                        Alpha2Keyboard
                      </option>
                      <option>
                        ArrowDown
                      </option>
                      <option>
                        ArrowLeft
                      </option>
                      <option>
                        ArrowRight
                      </option>
                      <option>
                        ArrowUp
                      </option>
                      <option>
                        Attention
                      </option>
                      <option>
                        BackFromKeyboard
                      </option>
                      <option>
                        BackMany
                      </option>
                      <option>
                        BackOne
                      </option>
                      <option>
                        Break
                      </option>
                      <option>
                        BrowserBack
                      </option>
                      <option>
                        BrowserForward
                      </option>
                      <option>
                        BrowserHome
                      </option>
                      <option>
                        BrowserSearch
                      </option>
                      <option>
                        Calibrate
                      </option>
                      <option>
                        CatalanSpain
                      </option>
                      <option>
                        ClearScratchpad
                      </option>
                      <option>
                        CollapseDock
                      </option>
                      <option>
                        CommuniKate
                      </option>
                      <option>
                        CommuniKateKeyboard
                      </option>
                      <option>
                        ConversationAlpha1Keyboard
                      </option>
                      <option>
                        ConversationAlpha2Keyboard
                      </option>
                      <option>
                        ConversationCommuniKateKeyboard
                      </option>
                      <option>
                        ConversationConfirmKeyboard
                      </option>
                      <option>
                        ConversationConfirmYes
                      </option>
                      <option>
                        ConversationConfirmNo
                      </option>
                      <option>
                        ConversationNumericAndSymbolsKeyboard
                      </option>
                      <option>
                        CopyAllFromScratchpad
                      </option>
                      <option>
                        CroatianCroatia
                      </option>
                      <option>
                        Currencies1Keyboard
                      </option>
                      <option>
                        Currencies2Keyboard
                      </option>
                      <option>
                        CzechCzechRepublic
                      </option>
                      <option>
                        DanishDenmark
                      </option>
                      <option>
                        DecreaseOpacity
                      </option>
                      <option>
                        Delete
                      </option>
                      <option>
                        Diacritic1Keyboard
                      </option>
                      <option>
                        Diacritic2Keyboard
                      </option>
                      <option>
                        Diacritic3Keyboard
                      </option>
                      <option>
                        DutchBelgium
                      </option>
                      <option>
                        DutchNetherlands
                      </option>
                      <option>
                        DynamicKeyboard
                      </option>
                      <option>
                        DynamicKeyboardNext
                      </option>
                      <option>
                        DynamicKeyboardPrev
                      </option>
                      <option>
                        End
                      </option>
                      <option>
                        EnglishCanada
                      </option>
                      <option>
                        EnglishUK
                      </option>
                      <option>
                        EnglishUS
                      </option>
                      <option>
                        ExpandToBottom
                      </option>
                      <option>
                        ExpandToBottomAndLeft
                      </option>
                      <option>
                        ExpandToBottomAndRight
                      </option>
                      <option>
                        ExpandToLeft
                      </option>
                      <option>
                        ExpandToRight
                      </option>
                      <option>
                        ExpandToTop
                      </option>
                      <option>
                        ExpandToTopAndLeft
                      </option>
                      <option>
                        ExpandToTopAndRight
                      </option>
                      <option>
                        Escape
                      </option>
                      <option>
                        ExpandDock
                      </option>
                      <option>
                        F1
                      </option>
                      <option>
                        F2
                      </option>
                      <option>
                        F3
                      </option>
                      <option>
                        F4
                      </option>
                      <option>
                        F5
                      </option>
                      <option>
                        F6
                      </option>
                      <option>
                        F7
                      </option>
                      <option>
                        F8
                      </option>
                      <option>
                        F9
                      </option>
                      <option>
                        F10
                      </option>
                      <option>
                        F11
                      </option>
                      <option>
                        F12
                      </option>
                      <option>
                        F13
                      </option>
                      <option>
                        F14
                      </option>
                      <option>
                        F15
                      </option>
                      <option>
                        F16
                      </option>
                      <option>
                        F17
                      </option>
                      <option>
                        F18
                      </option>
                      <option>
                        F19
                      </option>
                      <option>
                        FrenchFrance
                      </option>
                      <option>
                        FrenchCanada
                      </option>
                      <option>
                        GeorgianGeorgia
                      </option>
                      <option>
                        GermanGermany
                      </option>
                      <option>
                        GreekGreece
                      </option>
                      <option>
                        Home
                      </option>
                      <option>
                        IncreaseOpacity
                      </option>
                      <option>
                        Insert
                      </option>
                      <option>
                        ItalianItaly
                      </option>
                      <option>
                        JapaneseJapan
                      </option>
                      <option>
                        KoreanKorea
                      </option>
                      <option>
                        LanguageKeyboard
                      </option>
                      <option>
                        LeftAlt
                      </option>
                      <option>
                        LeftCtrl
                      </option>
                      <option>
                        LeftShift
                      </option>
                      <option>
                        LeftWin
                      </option>
                      <option>
                        LookToScrollActive
                      </option>
                      <option>
                        LookToScrollBounds
                      </option>
                      <option>
                        LookToScrollIncrement
                      </option>
                      <option>
                        LookToScrollMode
                      </option>
                      <option>
                        LookToScrollSpeed
                      </option>
                      <option>
                        Menu
                      </option>
                      <option>
                        MenuKeyboard
                      </option>
                      <option>
                        Minimise
                      </option>
                      <option>
                        More
                      </option>
                      <option>
                        MouseDrag
                      </option>
                      <option>
                        MouseKeyboard
                      </option>
                      <option>
                        MouseLeftClick
                      </option>
                      <option>
                        MouseLeftDoubleClick
                      </option>
                      <option>
                        MouseLeftDownUp
                      </option>
                      <option>
                        MouseMagneticCursor
                      </option>
                      <option>
                        MouseMiddleClick
                      </option>
                      <option>
                        MouseMiddleDownUp
                      </option>
                      <option>
                        MouseMoveAmountInPixels
                      </option>
                      <option>
                        MouseMoveAndLeftClick
                      </option>
                      <option>
                        MouseMoveAndLeftDoubleClick
                      </option>
                      <option>
                        MouseMoveAndMiddleClick
                      </option>
                      <option>
                        MouseMoveAndRightClick
                      </option>
                      <option>
                        MouseMoveTo
                      </option>
                      <option>
                        MouseMoveToBottom
                      </option>
                      <option>
                        MouseMoveToLeft
                      </option>
                      <option>
                        MouseMoveToRight
                      </option>
                      <option>
                        MouseMoveToTop
                      </option>
                      <option>
                        MouseRightClick
                      </option>
                      <option>
                        MouseRightDownUp
                      </option>
                      <option>
                        MouseScrollAmountInClicks
                      </option>
                      <option>
                        MouseMoveAndScrollToBottom
                      </option>
                      <option>
                        MouseMoveAndScrollToLeft
                      </option>
                      <option>
                        MouseMoveAndScrollToRight
                      </option>
                      <option>
                        MouseMoveAndScrollToTop
                      </option>
                      <option>
                        MouseScrollToTop
                      </option>
                      <option>
                        MouseScrollToBottom
                      </option>
                      <option>
                        MouseMagnifier
                      </option>
                      <option>
                        MoveAndResizeAdjustmentAmount
                      </option>
                      <option>
                        MoveToBottom
                      </option>
                      <option>
                        MoveToBottomAndLeft
                      </option>
                      <option>
                        MoveToBottomAndLeftBoundaries
                      </option>
                      <option>
                        MoveToBottomAndRight
                      </option>
                      <option>
                        MoveToBottomAndRightBoundaries
                      </option>
                      <option>
                        MoveToBottomBoundary
                      </option>
                      <option>
                        MoveToLeft
                      </option>
                      <option>
                        MoveToLeftBoundary
                      </option>
                      <option>
                        MoveToRight
                      </option>
                      <option>
                        MoveToRightBoundary
                      </option>
                      <option>
                        MoveToTop
                      </option>
                      <option>
                        MoveToTopAndLeft
                      </option>
                      <option>
                        MoveToTopAndLeftBoundaries
                      </option>
                      <option>
                        MoveToTopAndRight
                      </option>
                      <option>
                        MoveToTopAndRightBoundaries
                      </option>
                      <option>
                        MoveToTopBoundary
                      </option>
                      <option>
                        MultiKeySelectionIsOn
                      </option>
                      <option>
                        NextSuggestions
                      </option>
                      <option>
                        NoQuestionResult
                      </option>
                      <option>
                        NumberLock
                      </option>
                      <option>
                        NumericAndSymbols1Keyboard
                      </option>
                      <option>
                        NumericAndSymbols2Keyboard
                      </option>
                      <option>
                        NumericAndSymbols3Keyboard
                      </option>
                      <option>
                        NumPad0
                      </option>
                      <option>
                        NumPad1
                      </option>
                      <option>
                        NumPad2
                      </option>
                      <option>
                        NumPad3
                      </option>
                      <option>
                        NumPad4
                      </option>
                      <option>
                        NumPad5
                      </option>
                      <option>
                        NumPad6
                      </option>
                      <option>
                        NumPad7
                      </option>
                      <option>
                        NumPad8
                      </option>
                      <option>
                        NumPad9
                      </option>
                      <option>
                        PgDn
                      </option>
                      <option>
                        PgUp
                      </option>
                      <option>
                        PhysicalKeysKeyboard
                      </option>
                      <option>
                        Plugin
                      </option>
                      <option>
                        PolishPoland
                      </option>
                      <option>
                        PortuguesePortugal
                      </option>
                      <option>
                        PreviousSuggestions
                      </option>
                      <option>
                        PrintScreen
                      </option>
                      <option>
                        Quit
                      </option>
                      <option>
                        RepeatLastMouseAction
                      </option>
                      <option>
                        Restart
                      </option>
                      <option>
                        RussianRussia
                      </option>
                      <option>
                        ScrollLock
                      </option>
                      <option>
                        SelectVoice
                      </option>
                      <option>
                        SerbianSerbia
                      </option>
                      <option>
                        ShrinkFromBottom
                      </option>
                      <option>
                        ShrinkFromBottomAndLeft
                      </option>
                      <option>
                        ShrinkFromBottomAndRight
                      </option>
                      <option>
                        ShrinkFromLeft
                      </option>
                      <option>
                        ShrinkFromRight
                      </option>
                      <option>
                        ShrinkFromTop
                      </option>
                      <option>
                        ShrinkFromTopAndLeft
                      </option>
                      <option>
                        ShrinkFromTopAndRight
                      </option>
                      <option>
                        SimplifiedAlphaClear
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup1All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup2All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup3All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup4All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup5All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup6All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup7All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup8All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup9All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup10All
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup1SubGroup1
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup1SubGroup2
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup1SubGroup3
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup2SubGroup1
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup2SubGroup2
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup2SubGroup3
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup3SubGroup1
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup3SubGroup2
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup3SubGroup3
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup4SubGroup1
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup4SubGroup2
                      </option>
                      <option>
                        SimplifiedKeyboardAlphaGroup4SubGroup3
                      </option>
                      <option>
                        SimplifiedKeyboardNumericAll
                      </option>
                      <option>
                        SimplifiedKeyboardNumericGroup1
                      </option>
                      <option>
                        SimplifiedKeyboardNumericGroup2
                      </option>
                      <option>
                        SimplifiedKeyboardNumericGroup3
                      </option>
                      <option>
                        SimplifiedKeyboardGermanUmlaut
                      </option>
                      <option>
                        SimplifiedKeyboardHome
                      </option>
                      <option>
                        SizeAndPositionKeyboard
                      </option>
                      <option>
                        Sleep
                      </option>
                      <option>
                        SlovakSlovakia
                      </option>
                      <option>
                        SlovenianSlovenia
                      </option>
                      <option>
                        SpanishSpain
                      </option>
                      <option>
                        Speak
                      </option>
                      <option>
                        Suggestion1
                      </option>
                      <option>
                        Suggestion2
                      </option>
                      <option>
                        Suggestion3
                      </option>
                      <option>
                        Suggestion4
                      </option>
                      <option>
                        Suggestion5
                      </option>
                      <option>
                        Suggestion6
                      </option>
                      <option>
                        ToggleCaseOfPreviousCharacter
                      </option>
                      <option>
                        TurkishTurkey
                      </option>
                      <option>
                        UkrainianUkraine
                      </option>
                      <option>
                        WebBrowsingKeyboard
                      </option>
                      <option>
                        YesQuestionResult
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1471 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1474"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: clicked on 2 and set to text key 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value="6"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1289"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value="6"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1286 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1289"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: keyboard with valid container reference 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
      <Symbol>Menu</Symbol>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text/>
      <Label/>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2214"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2214"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2214"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2214"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2214"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2211 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2214"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: keyboard with valid container reference and registered eventlistenr 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
      <Symbol>Menu</Symbol>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text/>
      <Label/>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2399"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2399"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2399"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2399"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2399"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2396 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2399"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: nothing yet 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-179"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-176 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-179"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: set to invalid index 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-364"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-361 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-364"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: set to invalid index again 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
      <Symbol>Menu</Symbol>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text/>
      <Label/>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2029"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2029"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2029"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2029"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Text"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-2029"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        caseSensitive
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2026 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-2029"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: symbol example 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        5
      </div>
      <div
        className="key center isSelected   "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Menu
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \\
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 20,
            "maxHeight": 20,
            "maxWidth": 30,
            "width": 30,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
      <Text>\\\\</Text>
      <Label>\\\\</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
      <isAction>false</isAction>
      <Symbol>Menu</Symbol>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1659"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-1659"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Key Settings
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      type
                    </label>
                    <select>
                      <option>
                        DynamicKey
                      </option>
                      <option>
                        Scratchpad
                      </option>
                      <option>
                        SuggestionRow
                      </option>
                      <option>
                        SuggestionCol
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={false}
                            className="PrivateSwitchBase-input-1659"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={false}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        isAction
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-1657 Mui-checked MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            checked={true}
                            className="PrivateSwitchBase-input-1659"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                            value={true}
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        useSymbol
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    />
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Symbol
                    </label>
                    <select>
                      <option>
                        1of2Icon
                      </option>
                      <option>
                        1of3Icon
                      </option>
                      <option>
                        2of2Icon
                      </option>
                      <option>
                        2of3Icon
                      </option>
                      <option>
                        3of3Icon
                      </option>
                      <option>
                        DiacriticsIcon
                      </option>
                      <option>
                        AddToDictionaryIcon
                      </option>
                      <option>
                        AlarmIcon
                      </option>
                      <option>
                        AlphaIcon
                      </option>
                      <option>
                        ApplicationIcon
                      </option>
                      <option>
                        ArrowPointingToBottomIcon
                      </option>
                      <option>
                        ArrowPointingToBottomBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToBottomLeftIcon
                      </option>
                      <option>
                        ArrowPointingToBottomLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToBottomRightIcon
                      </option>
                      <option>
                        ArrowPointingToBottomRightBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToLeftIcon
                      </option>
                      <option>
                        ArrowPointingToLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToRightIcon
                      </option>
                      <option>
                        ArrowPointingToRightBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopIcon
                      </option>
                      <option>
                        ArrowPointingToTopBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopLeftIcon
                      </option>
                      <option>
                        ArrowPointingToTopLeftBoundaryIcon
                      </option>
                      <option>
                        ArrowPointingToTopRightIcon
                      </option>
                      <option>
                        ArrowPointingToTopRightBoundaryIcon
                      </option>
                      <option>
                        BackIcon
                      </option>
                      <option>
                        BackManyIcon
                      </option>
                      <option>
                        BackOneIcon
                      </option>
                      <option>
                        BrowserIcon
                      </option>
                      <option>
                        BrowserBackIcon
                      </option>
                      <option>
                        BrowserForwardIcon
                      </option>
                      <option>
                        BrowserHomeIcon
                      </option>
                      <option>
                        BrowserSearchIcon
                      </option>
                      <option>
                        CalibrateIcon
                      </option>
                      <option>
                        ClearIcon
                      </option>
                      <option>
                        CollapseDockIcon
                      </option>
                      <option>
                        CommuniKateIcon
                      </option>
                      <option>
                        ConversationIcon
                      </option>
                      <option>
                        CurrenciesIcon
                      </option>
                      <option>
                        CopyAllIcon
                      </option>
                      <option>
                        CursorIcon
                      </option>
                      <option>
                        DecreaseOpacityIcon
                      </option>
                      <option>
                        DownArrowKeyIcon
                      </option>
                      <option>
                        EndIcon
                      </option>
                      <option>
                        EnterIcon
                      </option>
                      <option>
                        ExpandDockIcon
                      </option>
                      <option>
                        FloatIcon
                      </option>
                      <option>
                        HomeIcon
                      </option>
                      <option>
                        IncreaseOpacityIcon
                      </option>
                      <option>
                        KeyboardIcon
                      </option>
                      <option>
                        LanguageIcon
                      </option>
                      <option>
                        MenuIcon
                      </option>
                      <option>
                        MinimiseIcon
                      </option>
                      <option>
                        MoreIcon
                      </option>
                      <option>
                        MouseIcon
                      </option>
                      <option>
                        MouseDragIcon
                      </option>
                      <option>
                        MouseLeftClickIcon
                      </option>
                      <option>
                        MouseLeftDoubleClickIcon
                      </option>
                      <option>
                        MouseLeftDownUpIcon
                      </option>
                      <option>
                        MouseMagneticCursorIcon
                      </option>
                      <option>
                        MouseMagnifierIcon
                      </option>
                      <option>
                        MouseMiddleClickIcon
                      </option>
                      <option>
                        MouseMiddleDownUpIcon
                      </option>
                      <option>
                        MouseMoveToIcon
                      </option>
                      <option>
                        MouseRightClickIcon
                      </option>
                      <option>
                        MouseRightDownUpIcon
                      </option>
                      <option>
                        MouseScrollToBottomIcon
                      </option>
                      <option>
                        MouseScrollToLeftIcon
                      </option>
                      <option>
                        MouseScrollToRightIcon
                      </option>
                      <option>
                        MouseScrollToTopIcon
                      </option>
                      <option>
                        MultiKeySelectionIcon
                      </option>
                      <option>
                        NoIcon
                      </option>
                      <option>
                        NumericAndSymbolsIcon
                      </option>
                      <option>
                        LeftArrowKeyIcon
                      </option>
                      <option>
                        LockBarIcon
                      </option>
                      <option>
                        LookToScrollActiveIcon
                      </option>
                      <option>
                        LookToScrollBoundsScreenPointIcon
                      </option>
                      <option>
                        LookToScrollBoundsScreenCentredIcon
                      </option>
                      <option>
                        LookToScrollBoundsWindowIcon
                      </option>
                      <option>
                        LookToScrollBoundsSubwindowIcon
                      </option>
                      <option>
                        LookToScrollBoundsCustomIcon
                      </option>
                      <option>
                        LookToScrollModeVerticalIcon
                      </option>
                      <option>
                        LookToScrollModeHorizontalIcon
                      </option>
                      <option>
                        LookToScrollModeCrossIcon
                      </option>
                      <option>
                        LookToScrollModeFreeIcon
                      </option>
                      <option>
                        LookToScrollSpeedSlowIcon
                      </option>
                      <option>
                        LookToScrollSpeedMediumIcon
                      </option>
                      <option>
                        LookToScrollSpeedFastIcon
                      </option>
                      <option>
                        PadlockIcon
                      </option>
                      <option>
                        PhysicalKeysIcon
                      </option>
                      <option>
                        QuitIcon
                      </option>
                      <option>
                        ReplayLastMouseActionIcon
                      </option>
                      <option>
                        RestartIcon
                      </option>
                      <option>
                        RightArrowKeyIcon
                      </option>
                      <option>
                        ShiftIcon
                      </option>
                      <option>
                        SizeAndPositionIcon
                      </option>
                      <option>
                        SpaceIcon
                      </option>
                      <option>
                        SpeakIcon
                      </option>
                      <option>
                        SleepIcon
                      </option>
                      <option>
                        SuggestionLeftIcon
                      </option>
                      <option>
                        SuggestionRightIcon
                      </option>
                      <option>
                        TabIcon
                      </option>
                      <option>
                        UpArrowKeyIcon
                      </option>
                      <option>
                        WinIcon
                      </option>
                      <option>
                        YesIcon
                      </option>
                      <option>
                        YesNoIcon
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    />
                  </div>
                  <div
                    className="MuiPaper-root MuiExpansionPanel-root simplePanel MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <div
                      aria-disabled={false}
                      aria-expanded={false}
                      className="MuiButtonBase-root MuiExpansionPanelSummary-root simplePanel"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        className="MuiExpansionPanelSummary-content"
                      >
                        <p
                          className="MuiTypography-root MuiTypography-body1"
                        >
                          Override Keygroup Settings
                        </p>
                      </div>
                      <div
                        aria-disabled={false}
                        aria-hidden={true}
                        className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role={null}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                    <div
                      className="MuiCollapse-container MuiCollapse-hidden"
                      style={
                        Object {
                          "minHeight": "0px",
                        }
                      }
                    >
                      <div
                        className="MuiCollapse-wrapper"
                      >
                        <div
                          className="MuiCollapse-wrapperInner"
                        >
                          <div
                            role="region"
                          >
                            <div
                              className="MuiExpansionPanelDetails-root simplePanel"
                            >
                              <div
                                className="flex1 vertical"
                              >
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Width"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Height"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="BackgroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="ForegroundColor"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDisabledOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownBackground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownForeground"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="KeyDownOpacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="Opacity"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyWidth
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      AutoScaleToOneKeyHeight
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to modify scaling behavior when key width is greater than 1. if not declared it will default to true
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      SharedSizeGroup
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  >
                                    only required to break out a key, or set of keys, to size separately, otherwise size grouping is determined automatically
                                  </p>
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UsePersianCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUnicodeCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="flex horizontal inputMargin"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1656 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          className="PrivateSwitchBase-input-1659"
                                          data-indeterminate={false}
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                    </span>
                                    <span
                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                    >
                                      UseUrduCompatibilityFont
                                    </span>
                                  </label>
                                  <p
                                    className="MuiFormHelperText-root center"
                                  />
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="LockOnTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="CompletionTime"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds from the start of the progress animation to the key being triggered
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatDelay"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milleseconds between the initial keystroke and a second consecutive keystroke of the same key
                                  </p>
                                </div>
                                <div
                                  className="MuiFormControl-root inputMargin"
                                >
                                  <input
                                    fullWidth={true}
                                    inputProps={
                                      Object {
                                        "max": undefined,
                                        "min": undefined,
                                        "step": undefined,
                                      }
                                    }
                                    label="RepeatRate"
                                    onChange={[Function]}
                                    type="number"
                                    value=""
                                  />
                                  <p
                                    className="MuiFormHelperText-root"
                                  >
                                    milliseconds between additional consecutive keystrokes of the same keymilliseconds from when gaze is detected on key to the start of the progress animation
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`app: test keygroup override parameters parsed successfully 1`] = `
Array [
  <div
    className="keyboardContainer"
  >
    <div
      className="keyboard"
    >
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ~
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        1
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        2
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        3
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        4
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        5
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        6
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        7
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        8
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        9
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        0
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        MenuIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        !
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ?
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        +
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        *
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        %
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        "
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        '
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        \`
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        $
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        /
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Q
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        W
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        E
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        R
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        T
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Z
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        U
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        I
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        O
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        P
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        |
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        -
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        _
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        A
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        S
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        D
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        F
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        G
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        H
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        J
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        K
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        L
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ^
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        TabIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &lt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Y
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        X
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        C
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        V
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        B
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        N
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        M
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        @
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        =
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        #
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Win
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        &gt;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ,
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        .
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        (
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        )
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        [
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ]
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        {
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        }
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        UpArrowKeyIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Esc
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Ctrl
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        Alt
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ;
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        :
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        ShiftIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        SpaceIcon
      </div>
      <div
        className="key center    "
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      />
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        EnterIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        BackOneIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        LeftArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        DownArrowKeyIcon
      </div>
      <div
        className="key center    smallerFont"
        draggable={true}
        onClick={[Function]}
        onDragEnd={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": 108,
            "maxHeight": 108,
            "maxWidth": 157,
            "width": 157,
          }
        }
      >
        RightArrowKeyIcon
      </div>
    </div>
  </div>,
  <div
    className="rightPanel"
  >
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          File
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="flextainer"
                >
                  <div
                    className="uploadContainer"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    tabIndex={0}
                  >
                    <input
                      autoComplete="off"
                      multiple={true}
                      onChange={[Function]}
                      onClick={[Function]}
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                      tabIndex={-1}
                      type="file"
                    />
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Import existing Files:
                    </p>
                    <p
                      className="MuiTypography-root MuiTypography-body1"
                    >
                      Drag "n" drop or click here to select file
                    </p>
                  </div>
                  <div
                    className="marginTop"
                  >
                    <input
                      fullWidth={true}
                      label="Keyboard XML"
                      multiline={true}
                      rowsMax={4}
                      value="<Keyboard>
  <Name>OptiKey-BoardMaker</Name>
  <Height>40</Height>
  <SymbolMargin>1</SymbolMargin>
  <BorderThickness>0,0,0,0</BorderThickness>
  <DockSize>Full</DockSize>
  <Position>Top</Position>
  <Width>100</Width>
  <HorizontalOffset>0</HorizontalOffset>
  <VerticalOffset>0</VerticalOffset>
  <BackgroundColor>Transparent</BackgroundColor>
  <BorderColor>Transparent</BorderColor>
  <WindowState>Docked</WindowState>
  <Grid>
    <Rows>7</Rows>
    <Cols>12</Cols>
  </Grid>
  <Content>
    <DynamicKey>
      <Row>0</Row>
      <Col>7</Col>
      <Text>7</Text>
      <Label>7</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>8</Col>
      <Text>8</Text>
      <Label>8</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>9</Col>
      <Text>9</Text>
      <Label>9</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>0</Col>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>0</Col>
      <Text>~</Text>
      <Label>~</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>10</Col>
      <Text>$</Text>
      <Label>$</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>6</Col>
      <Text>&amp;</Text>
      <Label>&amp;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>11</Col>
      <Text>^</Text>
      <Label>^</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>1</Col>
      <Text>!</Text>
      <Label>!</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>2</Col>
      <Text>?</Text>
      <Label>?</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>11</Col>
      <Text>|</Text>
      <Label>|</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>4</Col>
      <Text>4</Text>
      <Label>4</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>5</Col>
      <Text>5</Text>
      <Label>5</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>6</Col>
      <Text>6</Text>
      <Label>6</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>0</Col>
      <Text>/</Text>
      <Label>/</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>3</Col>
      <Text>:</Text>
      <Label>:</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>5</Col>
      <Text>f</Text>
      <ShiftUpLabel>f</ShiftUpLabel>
      <ShiftDownLabel>F</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>6</Col>
      <Text>g</Text>
      <ShiftUpLabel>g</ShiftUpLabel>
      <ShiftDownLabel>G</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>7</Col>
      <Text>h</Text>
      <ShiftUpLabel>h</ShiftUpLabel>
      <ShiftDownLabel>H</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>1</Col>
      <Text>q</Text>
      <ShiftUpLabel>q</ShiftUpLabel>
      <ShiftDownLabel>Q</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>8</Col>
      <Text>j</Text>
      <ShiftUpLabel>j</ShiftUpLabel>
      <ShiftDownLabel>J</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>5</Col>
      <Text>%</Text>
      <Label>%</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>1</Col>
      <Text>1</Text>
      <Label>1</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>2</Col>
      <Text>2</Text>
      <Label>2</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>8</Col>
      <BackgroundColor>Blue</BackgroundColor>
      <ForegroundColor>Blue</ForegroundColor>
      <KeyDisabledBackground>Blue</KeyDisabledBackground>
      <KeyDisabledForeground>Blue</KeyDisabledForeground>
      <KeyDisabledOpacity>1</KeyDisabledOpacity>
      <KeyDownBackground>Blue</KeyDownBackground>
      <KeyDownForeground>Blue</KeyDownForeground>
      <KeyDownOpacity>1</KeyDownOpacity>
      <Opacity>1</Opacity>
      <AutoScaleToOneKeyWidth>true</AutoScaleToOneKeyWidth>
      <AutoScaleToOneKeyHeight>true</AutoScaleToOneKeyHeight>
      <SharedSizeGroup>true</SharedSizeGroup>
      <UsePersianCompatibilityFont>true</UsePersianCompatibilityFont>
      <UseUnicodeCompatibilityFont>true</UseUnicodeCompatibilityFont>
      <UseUrduCompatibilityFont>true</UseUrduCompatibilityFont>
      <LockOnTime>500</LockOnTime>
      <CompletionTime>500</CompletionTime>
      <RepeatDelay>500</RepeatDelay>
      <RepeatRate>500</RepeatRate>
      <Text>m</Text>
      <ShiftUpLabel>m</ShiftUpLabel>
      <ShiftDownLabel>M</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>7</Col>
      <Text>n</Text>
      <ShiftUpLabel>n</ShiftUpLabel>
      <ShiftDownLabel>N</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>10</Col>
      <Text>p</Text>
      <ShiftUpLabel>p</ShiftUpLabel>
      <ShiftDownLabel>P</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>6</Col>
      <Text>b</Text>
      <ShiftUpLabel>b</ShiftUpLabel>
      <ShiftDownLabel>B</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>9</Col>
      <Text>k</Text>
      <ShiftUpLabel>k</ShiftUpLabel>
      <ShiftDownLabel>K</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>5</Col>
      <Text>v</Text>
      <ShiftUpLabel>v</ShiftUpLabel>
      <ShiftDownLabel>V</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>0</Col>
      <Text>-</Text>
      <Label>-</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>3</Col>
      <Text>3</Text>
      <Label>3</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>1</Col>
      <Text>_</Text>
      <Label>_</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>2</Col>
      <Text>;</Text>
      <Label>;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>9</Col>
      <Text>@</Text>
      <Label>@</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>7</Col>
      <Text>\\"</Text>
      <Label>\\"</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>8</Col>
      <Text>'</Text>
      <Label>'</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>11</Col>
      <Text>#</Text>
      <Label>#</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>10</Col>
      <Text>0</Text>
      <Label>0</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>10</Col>
      <Text>l</Text>
      <ShiftUpLabel>l</ShiftUpLabel>
      <ShiftDownLabel>L</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>3</Col>
      <Text>s</Text>
      <ShiftUpLabel>s</ShiftUpLabel>
      <ShiftDownLabel>S</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>4</Col>
      <Text>r</Text>
      <ShiftUpLabel>r</ShiftUpLabel>
      <ShiftDownLabel>R</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>5</Col>
      <Text>t</Text>
      <ShiftUpLabel>t</ShiftUpLabel>
      <ShiftDownLabel>T</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>4</Col>
      <Text>c</Text>
      <ShiftUpLabel>c</ShiftUpLabel>
      <ShiftDownLabel>C</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>4</Col>
      <Text>d</Text>
      <ShiftUpLabel>d</ShiftUpLabel>
      <ShiftDownLabel>D</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>2</Col>
      <Text>w</Text>
      <ShiftUpLabel>w</ShiftUpLabel>
      <ShiftDownLabel>W</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>3</Col>
      <Text>+</Text>
      <Label>+</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>1</Col>
      <Text>&lt;</Text>
      <Label>&lt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>10</Col>
      <Text>=</Text>
      <Label>=</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>3</Row>
      <Col>2</Col>
      <Text>a</Text>
      <ShiftUpLabel>a</ShiftUpLabel>
      <ShiftDownLabel>A</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>3</Col>
      <Text>e</Text>
      <ShiftUpLabel>e</ShiftUpLabel>
      <ShiftDownLabel>E</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>8</Col>
      <Text>i</Text>
      <ShiftUpLabel>i</ShiftUpLabel>
      <ShiftDownLabel>I</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>9</Col>
      <Text>o</Text>
      <ShiftUpLabel>o</ShiftUpLabel>
      <ShiftDownLabel>O</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>7</Col>
      <Text>u</Text>
      <ShiftUpLabel>u</ShiftUpLabel>
      <ShiftDownLabel>U</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>3</Col>
      <Text>x</Text>
      <ShiftUpLabel>x</ShiftUpLabel>
      <ShiftDownLabel>X</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>2</Col>
      <Text>y</Text>
      <ShiftUpLabel>y</ShiftUpLabel>
      <ShiftDownLabel>Y</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>2</Row>
      <Col>6</Col>
      <Text>z</Text>
      <ShiftUpLabel>z</ShiftUpLabel>
      <ShiftDownLabel>Z</ShiftDownLabel>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>1</Col>
      <Text>&gt;</Text>
      <Label>&gt;</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>2</Col>
      <Text>,</Text>
      <Label>,</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>3</Col>
      <Text>.</Text>
      <Label>.</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>4</Col>
      <Text>(</Text>
      <Label>(</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>5</Col>
      <Text>)</Text>
      <Label>)</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>6</Col>
      <Text>[</Text>
      <Label>[</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>7</Col>
      <Text>]</Text>
      <Label>]</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>8</Col>
      <Text>{</Text>
      <Label>{</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>9</Col>
      <Text>}</Text>
      <Label>}</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>4</Row>
      <Col>0</Col>
      <Symbol>TabIcon</Symbol>
      <Text>&#9;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>5</Col>
      <Width>2</Width>
      <Height>2</Height>
      <Symbol>SpaceIcon</Symbol>
      <Text>&#32;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>7</Col>
      <Symbol>EnterIcon</Symbol>
      <Text>&#13;</Text>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>9</Col>
      <Text>\`</Text>
      <Label>\`</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>1</Row>
      <Col>4</Col>
      <Text>*</Text>
      <Label>*</Label>
    </DynamicKey>
    <DynamicKey>
      <Row>0</Row>
      <Col>11</Col>
      <Symbol>MenuIcon</Symbol>
      <Action>MenuKeyboard</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>8</Col>
      <Symbol>BackOneIcon</Symbol>
      <Action>BackOne</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>0</Col>
      <Label>Win</Label>
      <Action>LeftWin</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>10</Col>
      <Symbol>UpArrowKeyIcon</Symbol>
      <Action>ArrowUp</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>5</Row>
      <Col>11</Col>
      <Label>Esc</Label>
      <Action>Escape</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>0</Col>
      <Label>Ctrl</Label>
      <Action>LeftCtrl</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>1</Col>
      <Label>Alt</Label>
      <Action>LeftAlt</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>4</Col>
      <Symbol>ShiftIcon</Symbol>
      <Action>LeftShift</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>9</Col>
      <Symbol>LeftArrowKeyIcon</Symbol>
      <Action>ArrowLeft</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>10</Col>
      <Symbol>DownArrowKeyIcon</Symbol>
      <Action>ArrowDown</Action>
      <isAction>true</isAction>
    </DynamicKey>
    <DynamicKey>
      <Row>6</Row>
      <Col>11</Col>
      <Symbol>RightArrowKeyIcon</Symbol>
      <Action>ArrowRight</Action>
      <isAction>true</isAction>
    </DynamicKey>
  </Content>
</Keyboard>"
                      variant="outlined"
                    />
                    <div
                      className="flex horizontal"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          download xml
                        </span>
                      </button>
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-fullWidth"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          copy xml to clipboard
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Global Settings
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <div
                  className="vertical flex1"
                >
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Name"
                      onChange={[Function]}
                      type="text"
                      value="OptiKey-BoardMaker"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      The name that will be shown in OptiKey
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Rows"
                      onChange={[Function]}
                      type="number"
                      value={7}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard rows
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Grid.Cols"
                      onChange={[Function]}
                      type="number"
                      value={12}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the amount of keyboard columns
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Height"
                      onChange={[Function]}
                      type="number"
                      value={40}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="Width"
                      onChange={[Function]}
                      type="number"
                      value={100}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderThickness"
                      onChange={[Function]}
                      type="text"
                      value="0,0,0,0"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how thick the lines between individual keys are
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="SymbolMargin"
                      onChange={[Function]}
                      type="number"
                      value={1}
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Amount of empty space left for symbols
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      Position
                    </label>
                    <select>
                      <option>
                        TopLeft
                      </option>
                      <option>
                        Top
                      </option>
                      <option>
                        TopRight
                      </option>
                      <option>
                        Left
                      </option>
                      <option>
                        Right
                      </option>
                      <option>
                        BottomLeft
                      </option>
                      <option>
                        Bottom
                      </option>
                      <option>
                        BottomRight
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls where the Keyboard will be shown
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2581 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2584"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        PersistNewState
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      Indiates whether the size and position of this keyboard will be saved
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      WindowState
                    </label>
                    <select>
                      <option>
                        Floating
                      </option>
                      <option>
                        Docked
                      </option>
                      <option>
                        Maximised
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls how the OptiKey window should behave
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin MuiFormControl-fullWidth"
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                      data-shrink={false}
                    >
                      DockSize
                    </label>
                    <select>
                      <option>
                        Full
                      </option>
                      <option>
                        Collapsed
                      </option>
                    </select>
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Controls the size of the dock
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="HorizontalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="VerticalOffset"
                      onChange={[Function]}
                      type="number"
                      value=""
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      Percent of screen. if negative then use the sum of the value and the screen's dimension
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BackgroundColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="MuiFormControl-root inputMargin"
                  >
                    <input
                      fullWidth={true}
                      inputProps={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "step": undefined,
                        }
                      }
                      label="BorderColor"
                      onChange={[Function]}
                      type="text"
                      value="Transparent"
                    />
                    <p
                      className="MuiFormHelperText-root"
                    >
                      for valid colors refer to https://docs.microsoft.com/en-us/dotnet/api/system.drawing.color
                    </p>
                  </div>
                  <div
                    className="flex horizontal inputMargin"
                  >
                    <label
                      className="MuiFormControlLabel-root"
                    >
                      <span
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-2581 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={null}
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <input
                            className="PrivateSwitchBase-input-2584"
                            data-indeterminate={false}
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                            />
                          </svg>
                        </span>
                      </span>
                      <span
                        className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                      >
                        HideFromKeyboardMenu
                      </span>
                    </label>
                    <p
                      className="MuiFormHelperText-root center"
                    >
                      controls whether or not this keyboard will be listed in the dynamic keyboard selection menu. You may wish to set this equal to False for smaller utility-type keyboards.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={false}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            Click on a key to edit it here
          </p>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-hidden"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p>
                  Click on a Key in the Keyboard to edit it
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="MuiPaper-root MuiExpansionPanel-root Mui-expanded MuiExpansionPanel-rounded MuiPaper-elevation1 MuiPaper-rounded"
    >
      <div
        aria-disabled={false}
        aria-expanded={true}
        className="MuiButtonBase-root MuiExpansionPanelSummary-root Mui-expanded"
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="button"
        tabIndex={0}
      >
        <div
          className="MuiExpansionPanelSummary-content Mui-expanded"
        >
          <p
            className="MuiTypography-root MuiTypography-body1"
          >
            About
          </p>
        </div>
        <div
          aria-disabled={false}
          aria-hidden={true}
          className="MuiButtonBase-root MuiIconButton-root MuiExpansionPanelSummary-expandIcon Mui-expanded MuiIconButton-edgeEnd"
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          role={null}
          tabIndex={null}
        >
          <span
            className="MuiIconButton-label"
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
              />
            </svg>
          </span>
        </div>
      </div>
      <div
        className="MuiCollapse-container MuiCollapse-entered"
        style={
          Object {
            "minHeight": "0px",
          }
        }
      >
        <div
          className="MuiCollapse-wrapper"
        >
          <div
            className="MuiCollapse-wrapperInner"
          >
            <div
              role="region"
            >
              <div
                className="MuiExpansionPanelDetails-root"
              >
                <p
                  className="MuiTypography-root MuiTypography-body1"
                >
                  Written with ❤️ by 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/hizoul"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    hizoul
                  </a>
                  .
                  <br />
                  Special thanks to 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/JuliusSweetland"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    Julius Sweetland
                  </a>
                   for writing 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    OptiKey
                  </a>
                   and 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="#"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                  >
                    all authors of open source libraries
                  </a>
                   enabling the existence of this tool.
                  <br />
                  Look at the 
                  <a
                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                    href="https://github.com/OptiKey/OptiKey/wiki/Creating-and-Using-Dynamic-Keyboards"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    custom keyboard documentation
                  </a>
                   for explanations on what the settings mean.
                </p>
              </div>
              <div>
                Dialog
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;
